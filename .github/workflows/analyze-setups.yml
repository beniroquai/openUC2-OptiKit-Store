name: Analyze UC2 Setups

on:
  push:
    branches: [ main, master ]
    paths:
      - 'setups/*.json'
      - 'analyze_setups.py'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'setups/*.json'
      - 'analyze_setups.py'
  workflow_dispatch:  # Allow manual triggering

jobs:
  analyze-setups:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        # Fetch full history to ensure we can commit back
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
    
    - name: Run setup analysis
      run: |
        python analyze_setups.py
    
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true' && github.event_name == 'push'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add setups_analysis.csv
        git commit -m "Auto-update setups analysis CSV [skip ci]"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload analysis results as artifact
      uses: actions/upload-artifact@v4
      with:
        name: setups-analysis
        path: setups_analysis.csv
        retention-days: 30
    
    - name: Comment on PR with analysis summary
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('setups_analysis.csv')) {
            const { execSync } = require('child_process');
            try {
              // Run analysis and capture output
              const output = execSync('python analyze_setups.py', { encoding: 'utf8' });
              
              // Extract summary from output
              const summaryMatch = output.match(/SETUP ANALYSIS SUMMARY[\s\S]*?={60}/);
              const summary = summaryMatch ? summaryMatch[0] : 'Analysis completed successfully!';
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: `## üîç UC2 Setups Analysis Results\n\n\`\`\`\n${summary}\n\`\`\`\n\nüìä The complete analysis is available as an artifact in this workflow run.`
              });
            } catch (error) {
              console.log('Could not extract analysis summary:', error);
            }
          }
